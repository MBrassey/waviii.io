{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('ethereumjs-tx'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits'), require('web3-core-method'), require('@babel/runtime/helpers/get'), require('lodash/isString'), require('web3-core-subscriptions'), require('web3-providers'), require('@babel/runtime/helpers/set'), require('web3-core')) : typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'ethereumjs-tx', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits', 'web3-core-method', '@babel/runtime/helpers/get', 'lodash/isString', 'web3-core-subscriptions', 'web3-providers', '@babel/runtime/helpers/set', 'web3-core'], factory) : (global = global || self, factory(global.Web3Eth = {}, global.web3CoreHelpers, global.web3EthAccounts, global.web3EthEns, global.web3EthContract, global.web3EthPersonal, global.web3EthAbi, global.web3EthIban, global.web3Net, global.Utils, global._regeneratorRuntime, global._asyncToGenerator, global._classCallCheck, global._createClass, global.EthereumTx, global._possibleConstructorReturn, global._getPrototypeOf, global._inherits, global.web3CoreMethod, global._get, global.isString, global.web3CoreSubscriptions, global.web3Providers, global._set, global.web3Core));\n})(this, function (exports, web3CoreHelpers, web3EthAccounts, web3EthEns, web3EthContract, web3EthPersonal, web3EthAbi, web3EthIban, web3Net, Utils, _regeneratorRuntime, _asyncToGenerator, _classCallCheck, _createClass, EthereumTx, _possibleConstructorReturn, _getPrototypeOf, _inherits, web3CoreMethod, _get, isString, web3CoreSubscriptions, web3Providers, _set, web3Core) {\n  'use strict';\n\n  _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n  _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n  _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n  _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n  EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n  _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n  _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n  _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n  _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n  isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n  _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n\n  var TransactionSigner = function () {\n    function TransactionSigner(utils, formatters) {\n      _classCallCheck(this, TransactionSigner);\n\n      this.utils = utils;\n      this.formatters = formatters;\n    }\n\n    _createClass(TransactionSigner, [{\n      key: \"sign\",\n      value: function () {\n        var _sign = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n          var ethTx, validationResult, rlpEncoded, rawTransaction, transactionHash;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (privateKey) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  throw new Error('No privateKey given to the TransactionSigner.');\n\n                case 2:\n                  if (privateKey.startsWith('0x')) {\n                    privateKey = privateKey.substring(2);\n                  }\n\n                  ethTx = new EthereumTx(transaction);\n                  ethTx.sign(Buffer.from(privateKey, 'hex'));\n                  validationResult = ethTx.validate(true);\n\n                  if (!(validationResult !== '')) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n\n                case 8:\n                  rlpEncoded = ethTx.serialize().toString('hex');\n                  rawTransaction = '0x' + rlpEncoded;\n                  transactionHash = this.utils.keccak256(rawTransaction);\n                  return _context.abrupt(\"return\", {\n                    messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                    v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                    r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                    s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                    rawTransaction: rawTransaction,\n                    transactionHash: transactionHash\n                  });\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function sign(_x, _x2) {\n          return _sign.apply(this, arguments);\n        }\n\n        return sign;\n      }()\n    }, {\n      key: \"type\",\n      get: function get() {\n        return 'TransactionSigner';\n      }\n    }]);\n\n    return TransactionSigner;\n  }();\n\n  var GetBlockMethod = function (_AbstractGetBlockMeth) {\n    _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n\n    function GetBlockMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getBlockByHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockMethod;\n  }(web3CoreMethod.AbstractGetBlockMethod);\n\n  var GetUncleMethod = function (_AbstractGetUncleMeth) {\n    _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n\n    function GetUncleMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetUncleMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetUncleMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n        }\n\n        _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetUncleMethod;\n  }(web3CoreMethod.AbstractGetUncleMethod);\n\n  var GetBlockTransactionCountMethod = function (_AbstractGetBlockTran) {\n    _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n\n    function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockTransactionCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockTransactionCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockTransactionCountMethod;\n  }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n  var GetBlockUncleCountMethod = function (_AbstractGetBlockUncl) {\n    _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n\n    function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockUncleCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockUncleCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getUncleCountByBlockHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockUncleCountMethod;\n  }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n  var GetTransactionFromBlockMethod = function (_AbstractGetTransacti) {\n    _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n\n    function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionFromBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetTransactionFromBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n        }\n\n        _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetTransactionFromBlockMethod;\n  }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n  var EthSignTransactionMethod = function (_SignTransactionMetho) {\n    _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n\n    function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EthSignTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EthSignTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }, {\n      key: \"execute\",\n      value: function execute() {\n        if (isString(this.parameters[1])) {\n          var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n\n          if (account) {\n            return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n          }\n        }\n\n        return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n      }\n    }]);\n\n    return EthSignTransactionMethod;\n  }(web3CoreMethod.SignTransactionMethod);\n\n  var EthSignMethod = function (_SignMethod) {\n    _inherits(EthSignMethod, _SignMethod);\n\n    function EthSignMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EthSignMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EthSignMethod, [{\n      key: \"execute\",\n      value: function execute() {\n        if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n          return this.signLocally();\n        }\n\n        return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n      }\n    }, {\n      key: \"signLocally\",\n      value: function () {\n        var _signLocally = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n          var signedMessage;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  this.beforeExecution(this.moduleInstance);\n                  signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n\n                  if (!this.callback) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  this.callback(false, signedMessage);\n                  return _context.abrupt(\"return\");\n\n                case 6:\n                  return _context.abrupt(\"return\", signedMessage);\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n\n                  if (!this.callback) {\n                    _context.next = 14;\n                    break;\n                  }\n\n                  this.callback(_context.t0, null);\n                  return _context.abrupt(\"return\");\n\n                case 14:\n                  throw _context.t0;\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 9]]);\n        }));\n\n        function signLocally() {\n          return _signLocally.apply(this, arguments);\n        }\n\n        return signLocally;\n      }()\n    }]);\n\n    return EthSignMethod;\n  }(web3CoreMethod.SignMethod);\n\n  var EthGetAccountsMethod = function (_GetAccountsMethod) {\n    _inherits(EthGetAccountsMethod, _GetAccountsMethod);\n\n    function EthGetAccountsMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EthGetAccountsMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EthGetAccountsMethod).call(this, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EthGetAccountsMethod, [{\n      key: \"execute\",\n      value: function execute() {\n        if (this.moduleInstance.accounts.wallet.accountsIndex) {\n          var accounts = [];\n\n          for (var i = 0; i < this.moduleInstance.accounts.wallet.accountsIndex; i++) {\n            accounts.push(this.moduleInstance.accounts.wallet[i].address);\n          }\n\n          return Promise.resolve(accounts);\n        }\n\n        return _get(_getPrototypeOf(EthGetAccountsMethod.prototype), \"execute\", this).call(this);\n      }\n    }]);\n\n    return EthGetAccountsMethod;\n  }(web3CoreMethod.GetAccountsMethod);\n\n  var MethodFactory = function (_AbstractMethodFactor) {\n    _inherits(MethodFactory, _AbstractMethodFactor);\n\n    function MethodFactory(utils, formatters) {\n      var _this;\n\n      _classCallCheck(this, MethodFactory);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n      _this.methods = {\n        getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n        getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n        getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n        isMining: web3CoreMethod.IsMiningMethod,\n        getHashrate: web3CoreMethod.GetHashrateMethod,\n        isSyncing: web3CoreMethod.IsSyncingMethod,\n        getGasPrice: web3CoreMethod.GetGasPriceMethod,\n        getAccounts: EthGetAccountsMethod,\n        getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n        getBalance: web3CoreMethod.GetBalanceMethod,\n        getStorageAt: web3CoreMethod.GetStorageAtMethod,\n        getCode: web3CoreMethod.GetCodeMethod,\n        getBlock: GetBlockMethod,\n        getUncle: GetUncleMethod,\n        getBlockTransactionCount: GetBlockTransactionCountMethod,\n        getBlockUncleCount: GetBlockUncleCountMethod,\n        getTransaction: web3CoreMethod.GetTransactionMethod,\n        getPendingTransactions: web3CoreMethod.GetPendingTransactionsMethod,\n        getTransactionFromBlock: GetTransactionFromBlockMethod,\n        getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n        getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n        sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n        signTransaction: EthSignTransactionMethod,\n        sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n        sign: EthSignMethod,\n        call: web3CoreMethod.CallMethod,\n        estimateGas: web3CoreMethod.EstimateGasMethod,\n        submitWork: web3CoreMethod.SubmitWorkMethod,\n        getWork: web3CoreMethod.GetWorkMethod,\n        getPastLogs: web3CoreMethod.GetPastLogsMethod,\n        requestAccounts: web3CoreMethod.RequestAccountsMethod,\n        getId: web3CoreMethod.VersionMethod,\n        getChainId: web3CoreMethod.ChainIdMethod,\n        getProof: web3CoreMethod.GetProofMethod\n      };\n      return _this;\n    }\n\n    return MethodFactory;\n  }(web3CoreMethod.AbstractMethodFactory);\n\n  var SubscriptionsFactory = function () {\n    function SubscriptionsFactory(utils, formatters) {\n      _classCallCheck(this, SubscriptionsFactory);\n\n      this.utils = utils;\n      this.formatters = formatters;\n    }\n\n    _createClass(SubscriptionsFactory, [{\n      key: \"getSubscription\",\n      value: function getSubscription(moduleInstance, type, options) {\n        switch (type) {\n          case 'logs':\n            return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n\n          case 'newBlockHeaders':\n            return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n\n          case 'pendingTransactions':\n            return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n\n          case 'syncing':\n            return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n\n          default:\n            throw new Error(\"Unknown subscription: \".concat(type));\n        }\n      }\n    }]);\n\n    return SubscriptionsFactory;\n  }();\n\n  var Eth = function (_AbstractWeb3Module) {\n    _inherits(Eth, _AbstractWeb3Module);\n\n    function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n      var _this;\n\n      _classCallCheck(this, Eth);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n      _this.net = net;\n      _this.accounts = accounts;\n      _this.personal = personal;\n      _this.Iban = Iban;\n      _this.abi = abiCoder;\n      _this.ens = ens;\n      _this.utils = utils;\n      _this.formatters = formatters;\n      _this.subscriptionsFactory = subscriptionsFactory;\n      _this.contractModuleFactory = contractModuleFactory;\n      _this.initiatedContracts = [];\n      _this._transactionSigner = options.transactionSigner;\n\n      _this.Contract = function (abi, address) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n          defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n          defaultBlock: options.defaultBlock || _this.defaultBlock,\n          defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n          defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n          transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n          transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n          transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n          transactionSigner: _this.transactionSigner,\n          data: options.data\n        });\n\n        _this.initiatedContracts.push(contract);\n\n        return contract;\n      };\n\n      return _this;\n    }\n\n    _createClass(Eth, [{\n      key: \"clearSubscriptions\",\n      value: function clearSubscriptions() {\n        return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(type, options, callback) {\n        return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n      }\n    }, {\n      key: \"setProvider\",\n      value: function setProvider(provider, net) {\n        var setContractProviders = this.initiatedContracts.every(function (contract) {\n          return contract.setProvider(provider, net);\n        });\n        return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n      }\n    }, {\n      key: \"transactionSigner\",\n      get: function get() {\n        return this._transactionSigner;\n      },\n      set: function set(transactionSigner) {\n        if (transactionSigner.type && transactionSigner.type === 'TransactionSigner') {\n          throw new Error('Invalid TransactionSigner given!');\n        }\n\n        this._transactionSigner = transactionSigner;\n        this.accounts.transactionSigner = transactionSigner;\n        this.ens.transactionSigner = transactionSigner;\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionSigner = transactionSigner;\n        });\n      }\n    }, {\n      key: \"defaultGasPrice\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultGasPrice = value;\n        });\n        this.net.defaultGasPrice = value;\n        this.personal.defaultGasPrice = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n      }\n    }, {\n      key: \"defaultGas\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultGas = value;\n        });\n        this.net.defaultGas = value;\n        this.personal.defaultGas = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n      }\n    }, {\n      key: \"transactionBlockTimeout\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionBlockTimeout = value;\n        });\n        this.net.transactionBlockTimeout = value;\n        this.personal.transactionBlockTimeout = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n      }\n    }, {\n      key: \"transactionConfirmationBlocks\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionConfirmationBlocks = value;\n        });\n        this.net.transactionConfirmationBlocks = value;\n        this.personal.transactionConfirmationBlocks = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n      }\n    }, {\n      key: \"transactionPollingTimeout\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionPollingTimeout = value;\n        });\n        this.net.transactionPollingTimeout = value;\n        this.personal.transactionPollingTimeout = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n      }\n    }, {\n      key: \"defaultAccount\",\n      set: function set(value) {\n        var _this2 = this;\n\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n        });\n        this.net.defaultAccount = value;\n        this.personal.defaultAccount = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n      }\n    }, {\n      key: \"defaultBlock\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultBlock = value;\n        });\n        this.net.defaultBlock = value;\n        this.personal.defaultBlock = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n      }\n    }]);\n\n    return Eth;\n  }(web3Core.AbstractWeb3Module);\n\n  function TransactionSigner$1() {\n    return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n  }\n\n  function Eth$1(provider) {\n    var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!options.transactionSigner || options.transactionSigner.type === 'TransactionSigner') {\n      options.transactionSigner = new TransactionSigner$1();\n    }\n\n    var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n    var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n    var abiCoder = new web3EthAbi.AbiCoder();\n    return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n  }\n\n  exports.Eth = Eth$1;\n  exports.TransactionSigner = TransactionSigner$1;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/home/luc1d/Code/Github/waviii.io/node_modules/web3-eth/dist/web3-eth.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","Web3Eth","web3CoreHelpers","web3EthAccounts","web3EthEns","web3EthContract","web3EthPersonal","web3EthAbi","web3EthIban","web3Net","Utils","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","EthereumTx","_possibleConstructorReturn","_getPrototypeOf","_inherits","web3CoreMethod","_get","isString","web3CoreSubscriptions","web3Providers","_set","web3Core","hasOwnProperty","TransactionSigner","utils","formatters","key","value","_sign","mark","_callee","transaction","privateKey","ethTx","validationResult","rlpEncoded","rawTransaction","transactionHash","wrap","_callee$","_context","prev","next","Error","startsWith","substring","sign","Buffer","from","validate","concat","serialize","toString","keccak256","abrupt","messageHash","hash","v","r","s","stop","_x","_x2","apply","arguments","get","GetBlockMethod","_AbstractGetBlockMeth","moduleInstance","call","beforeExecution","isHash","parameters","rpcMethod","prototype","AbstractGetBlockMethod","GetUncleMethod","_AbstractGetUncleMeth","AbstractGetUncleMethod","GetBlockTransactionCountMethod","_AbstractGetBlockTran","AbstractGetBlockTransactionCountMethod","GetBlockUncleCountMethod","_AbstractGetBlockUncl","AbstractGetBlockUncleCountMethod","GetTransactionFromBlockMethod","_AbstractGetTransacti","AbstractGetTransactionFromBlockMethod","EthSignTransactionMethod","_SignTransactionMetho","inputTransactionFormatter","execute","account","accounts","wallet","transactionSigner","SignTransactionMethod","EthSignMethod","_SignMethod","signLocally","_signLocally","signedMessage","callback","t0","SignMethod","EthGetAccountsMethod","_GetAccountsMethod","accountsIndex","i","push","address","Promise","resolve","GetAccountsMethod","MethodFactory","_AbstractMethodFactor","_this","methods","getNodeInfo","GetNodeInfoMethod","getProtocolVersion","GetProtocolVersionMethod","getCoinbase","GetCoinbaseMethod","isMining","IsMiningMethod","getHashrate","GetHashrateMethod","isSyncing","IsSyncingMethod","getGasPrice","GetGasPriceMethod","getAccounts","getBlockNumber","GetBlockNumberMethod","getBalance","GetBalanceMethod","getStorageAt","GetStorageAtMethod","getCode","GetCodeMethod","getBlock","getUncle","getBlockTransactionCount","getBlockUncleCount","getTransaction","GetTransactionMethod","getPendingTransactions","GetPendingTransactionsMethod","getTransactionFromBlock","getTransactionReceipt","GetTransactionReceiptMethod","getTransactionCount","GetTransactionCountMethod","sendSignedTransaction","SendRawTransactionMethod","signTransaction","sendTransaction","EthSendTransactionMethod","CallMethod","estimateGas","EstimateGasMethod","submitWork","SubmitWorkMethod","getWork","GetWorkMethod","getPastLogs","GetPastLogsMethod","requestAccounts","RequestAccountsMethod","getId","VersionMethod","getChainId","ChainIdMethod","getProof","GetProofMethod","AbstractMethodFactory","SubscriptionsFactory","getSubscription","type","options","LogSubscription","NewHeadsSubscription","NewPendingTransactionsSubscription","SyncingSubscription","Eth","_AbstractWeb3Module","provider","methodFactory","net","personal","Iban","abiCoder","ens","subscriptionsFactory","contractModuleFactory","nodeNet","abi","initiatedContracts","_transactionSigner","Contract","length","undefined","contract","createContract","currentProvider","defaultAccount","defaultBlock","defaultGas","gas","defaultGasPrice","gasPrice","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","data","clearSubscriptions","subscribe","setProvider","setContractProviders","every","set","forEach","_this2","toChecksumAddress","AbstractWeb3Module","TransactionSigner$1","Eth$1","resolvedProvider","ProviderResolver","Accounts","AbiCoder","Network","Personal","Ens","ContractModuleFactory","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('ethereumjs-tx'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits'), require('web3-core-method'), require('@babel/runtime/helpers/get'), require('lodash/isString'), require('web3-core-subscriptions'), require('web3-providers'), require('@babel/runtime/helpers/set'), require('web3-core')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'ethereumjs-tx', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits', 'web3-core-method', '@babel/runtime/helpers/get', 'lodash/isString', 'web3-core-subscriptions', 'web3-providers', '@babel/runtime/helpers/set', 'web3-core'], factory) :\n    (global = global || self, factory(global.Web3Eth = {}, global.web3CoreHelpers, global.web3EthAccounts, global.web3EthEns, global.web3EthContract, global.web3EthPersonal, global.web3EthAbi, global.web3EthIban, global.web3Net, global.Utils, global._regeneratorRuntime, global._asyncToGenerator, global._classCallCheck, global._createClass, global.EthereumTx, global._possibleConstructorReturn, global._getPrototypeOf, global._inherits, global.web3CoreMethod, global._get, global.isString, global.web3CoreSubscriptions, global.web3Providers, global._set, global.web3Core));\n}(this, function (exports, web3CoreHelpers, web3EthAccounts, web3EthEns, web3EthContract, web3EthPersonal, web3EthAbi, web3EthIban, web3Net, Utils, _regeneratorRuntime, _asyncToGenerator, _classCallCheck, _createClass, EthereumTx, _possibleConstructorReturn, _getPrototypeOf, _inherits, web3CoreMethod, _get, isString, web3CoreSubscriptions, web3Providers, _set, web3Core) { 'use strict';\n\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n\n    var TransactionSigner =\n    function () {\n      function TransactionSigner(utils, formatters) {\n        _classCallCheck(this, TransactionSigner);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(TransactionSigner, [{\n        key: \"sign\",\n        value: function () {\n          var _sign = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n            var ethTx, validationResult, rlpEncoded, rawTransaction, transactionHash;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (privateKey) {\n                      _context.next = 2;\n                      break;\n                    }\n                    throw new Error('No privateKey given to the TransactionSigner.');\n                  case 2:\n                    if (privateKey.startsWith('0x')) {\n                      privateKey = privateKey.substring(2);\n                    }\n                    ethTx = new EthereumTx(transaction);\n                    ethTx.sign(Buffer.from(privateKey, 'hex'));\n                    validationResult = ethTx.validate(true);\n                    if (!(validationResult !== '')) {\n                      _context.next = 8;\n                      break;\n                    }\n                    throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n                  case 8:\n                    rlpEncoded = ethTx.serialize().toString('hex');\n                    rawTransaction = '0x' + rlpEncoded;\n                    transactionHash = this.utils.keccak256(rawTransaction);\n                    return _context.abrupt(\"return\", {\n                      messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                      v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                      r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                      s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                      rawTransaction: rawTransaction,\n                      transactionHash: transactionHash\n                    });\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function sign(_x, _x2) {\n            return _sign.apply(this, arguments);\n          }\n          return sign;\n        }()\n      }, {\n        key: \"type\",\n        get: function get() {\n          return 'TransactionSigner';\n        }\n      }]);\n      return TransactionSigner;\n    }();\n\n    var GetBlockMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n      function GetBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockByHash';\n          }\n          _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockMethod;\n    }(web3CoreMethod.AbstractGetBlockMethod);\n\n    var GetUncleMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n      function GetUncleMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetUncleMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetUncleMethod;\n    }(web3CoreMethod.AbstractGetUncleMethod);\n\n    var GetBlockTransactionCountMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n          }\n          _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockTransactionCountMethod;\n    }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockUncleCountMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockUncleCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleCountByBlockHash';\n          }\n          _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockUncleCountMethod;\n    }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n    var GetTransactionFromBlockMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n      function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionFromBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionFromBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetTransactionFromBlockMethod;\n    }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n    var EthSignTransactionMethod =\n    function (_SignTransactionMetho) {\n      _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n      function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          if (isString(this.parameters[1])) {\n            var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n            if (account) {\n              return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n            }\n          }\n          return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthSignTransactionMethod;\n    }(web3CoreMethod.SignTransactionMethod);\n\n    var EthSignMethod =\n    function (_SignMethod) {\n      _inherits(EthSignMethod, _SignMethod);\n      function EthSignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n            return this.signLocally();\n          }\n          return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n        }\n      }, {\n        key: \"signLocally\",\n        value: function () {\n          var _signLocally = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var signedMessage;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    this.beforeExecution(this.moduleInstance);\n                    signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n                    if (!this.callback) {\n                      _context.next = 6;\n                      break;\n                    }\n                    this.callback(false, signedMessage);\n                    return _context.abrupt(\"return\");\n                  case 6:\n                    return _context.abrupt(\"return\", signedMessage);\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](0);\n                    if (!this.callback) {\n                      _context.next = 14;\n                      break;\n                    }\n                    this.callback(_context.t0, null);\n                    return _context.abrupt(\"return\");\n                  case 14:\n                    throw _context.t0;\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[0, 9]]);\n          }));\n          function signLocally() {\n            return _signLocally.apply(this, arguments);\n          }\n          return signLocally;\n        }()\n      }]);\n      return EthSignMethod;\n    }(web3CoreMethod.SignMethod);\n\n    var EthGetAccountsMethod =\n    function (_GetAccountsMethod) {\n      _inherits(EthGetAccountsMethod, _GetAccountsMethod);\n      function EthGetAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthGetAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthGetAccountsMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthGetAccountsMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet.accountsIndex) {\n            var accounts = [];\n            for (var i = 0; i < this.moduleInstance.accounts.wallet.accountsIndex; i++) {\n              accounts.push(this.moduleInstance.accounts.wallet[i].address);\n            }\n            return Promise.resolve(accounts);\n          }\n          return _get(_getPrototypeOf(EthGetAccountsMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthGetAccountsMethod;\n    }(web3CoreMethod.GetAccountsMethod);\n\n    var MethodFactory =\n    function (_AbstractMethodFactor) {\n      _inherits(MethodFactory, _AbstractMethodFactor);\n      function MethodFactory(utils, formatters) {\n        var _this;\n        _classCallCheck(this, MethodFactory);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n        _this.methods = {\n          getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n          getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n          getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n          isMining: web3CoreMethod.IsMiningMethod,\n          getHashrate: web3CoreMethod.GetHashrateMethod,\n          isSyncing: web3CoreMethod.IsSyncingMethod,\n          getGasPrice: web3CoreMethod.GetGasPriceMethod,\n          getAccounts: EthGetAccountsMethod,\n          getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n          getBalance: web3CoreMethod.GetBalanceMethod,\n          getStorageAt: web3CoreMethod.GetStorageAtMethod,\n          getCode: web3CoreMethod.GetCodeMethod,\n          getBlock: GetBlockMethod,\n          getUncle: GetUncleMethod,\n          getBlockTransactionCount: GetBlockTransactionCountMethod,\n          getBlockUncleCount: GetBlockUncleCountMethod,\n          getTransaction: web3CoreMethod.GetTransactionMethod,\n          getPendingTransactions: web3CoreMethod.GetPendingTransactionsMethod,\n          getTransactionFromBlock: GetTransactionFromBlockMethod,\n          getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n          getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n          sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n          signTransaction: EthSignTransactionMethod,\n          sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n          sign: EthSignMethod,\n          call: web3CoreMethod.CallMethod,\n          estimateGas: web3CoreMethod.EstimateGasMethod,\n          submitWork: web3CoreMethod.SubmitWorkMethod,\n          getWork: web3CoreMethod.GetWorkMethod,\n          getPastLogs: web3CoreMethod.GetPastLogsMethod,\n          requestAccounts: web3CoreMethod.RequestAccountsMethod,\n          getId: web3CoreMethod.VersionMethod,\n          getChainId: web3CoreMethod.ChainIdMethod,\n          getProof: web3CoreMethod.GetProofMethod\n        };\n        return _this;\n      }\n      return MethodFactory;\n    }(web3CoreMethod.AbstractMethodFactory);\n\n    var SubscriptionsFactory =\n    function () {\n      function SubscriptionsFactory(utils, formatters) {\n        _classCallCheck(this, SubscriptionsFactory);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(SubscriptionsFactory, [{\n        key: \"getSubscription\",\n        value: function getSubscription(moduleInstance, type, options) {\n          switch (type) {\n            case 'logs':\n              return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n            case 'newBlockHeaders':\n              return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'pendingTransactions':\n              return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'syncing':\n              return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n            default:\n              throw new Error(\"Unknown subscription: \".concat(type));\n          }\n        }\n      }]);\n      return SubscriptionsFactory;\n    }();\n\n    var Eth =\n    function (_AbstractWeb3Module) {\n      _inherits(Eth, _AbstractWeb3Module);\n      function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n        var _this;\n        _classCallCheck(this, Eth);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n        _this.net = net;\n        _this.accounts = accounts;\n        _this.personal = personal;\n        _this.Iban = Iban;\n        _this.abi = abiCoder;\n        _this.ens = ens;\n        _this.utils = utils;\n        _this.formatters = formatters;\n        _this.subscriptionsFactory = subscriptionsFactory;\n        _this.contractModuleFactory = contractModuleFactory;\n        _this.initiatedContracts = [];\n        _this._transactionSigner = options.transactionSigner;\n        _this.Contract = function (abi, address) {\n          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n            defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n            defaultBlock: options.defaultBlock || _this.defaultBlock,\n            defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n            defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n            transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n            transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n            transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n            transactionSigner: _this.transactionSigner,\n            data: options.data\n          });\n          _this.initiatedContracts.push(contract);\n          return contract;\n        };\n        return _this;\n      }\n      _createClass(Eth, [{\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe(type, options, callback) {\n          return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n        }\n      }, {\n        key: \"setProvider\",\n        value: function setProvider(provider, net) {\n          var setContractProviders = this.initiatedContracts.every(function (contract) {\n            return contract.setProvider(provider, net);\n          });\n          return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n        }\n      }, {\n        key: \"transactionSigner\",\n        get: function get() {\n          return this._transactionSigner;\n        }\n        ,\n        set: function set(transactionSigner) {\n          if (transactionSigner.type && transactionSigner.type === 'TransactionSigner') {\n            throw new Error('Invalid TransactionSigner given!');\n          }\n          this._transactionSigner = transactionSigner;\n          this.accounts.transactionSigner = transactionSigner;\n          this.ens.transactionSigner = transactionSigner;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionSigner = transactionSigner;\n          });\n        }\n      }, {\n        key: \"defaultGasPrice\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGasPrice = value;\n          });\n          this.net.defaultGasPrice = value;\n          this.personal.defaultGasPrice = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n        }\n      }, {\n        key: \"defaultGas\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGas = value;\n          });\n          this.net.defaultGas = value;\n          this.personal.defaultGas = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n        }\n      }, {\n        key: \"transactionBlockTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionBlockTimeout = value;\n          });\n          this.net.transactionBlockTimeout = value;\n          this.personal.transactionBlockTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n        }\n      }, {\n        key: \"transactionConfirmationBlocks\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionConfirmationBlocks = value;\n          });\n          this.net.transactionConfirmationBlocks = value;\n          this.personal.transactionConfirmationBlocks = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n        }\n      }, {\n        key: \"transactionPollingTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionPollingTimeout = value;\n          });\n          this.net.transactionPollingTimeout = value;\n          this.personal.transactionPollingTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n        }\n      }, {\n        key: \"defaultAccount\",\n        set: function set(value) {\n          var _this2 = this;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n          });\n          this.net.defaultAccount = value;\n          this.personal.defaultAccount = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n        }\n      }, {\n        key: \"defaultBlock\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultBlock = value;\n          });\n          this.net.defaultBlock = value;\n          this.personal.defaultBlock = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n        }\n      }]);\n      return Eth;\n    }(web3Core.AbstractWeb3Module);\n\n    function TransactionSigner$1() {\n      return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n    }\n    function Eth$1(provider) {\n      var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!options.transactionSigner || options.transactionSigner.type === 'TransactionSigner') {\n        options.transactionSigner = new TransactionSigner$1();\n      }\n      var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n      var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n      var abiCoder = new web3EthAbi.AbiCoder();\n      return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n    }\n\n    exports.Eth = Eth$1;\n    exports.TransactionSigner = TransactionSigner$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"script"}