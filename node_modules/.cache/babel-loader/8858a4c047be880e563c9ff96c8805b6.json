{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lodash/isString'), require('lodash/isArray'), require('lodash/isObject'), require('lodash/isNumber'), require('web3-utils'), require('web3-eth-iban')) : typeof define === 'function' && define.amd ? define(['exports', 'lodash/isString', 'lodash/isArray', 'lodash/isObject', 'lodash/isNumber', 'web3-utils', 'web3-eth-iban'], factory) : (global = global || self, factory(global.Web3CoreHelpers = {}, global.isString, global.isArray, global.isObject, global.isNumber, global.Utils, global.web3EthIban));\n})(this, function (exports, isString, isArray, isObject, isNumber, Utils, web3EthIban) {\n  'use strict';\n\n  isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n  isArray = isArray && isArray.hasOwnProperty('default') ? isArray['default'] : isArray;\n  isObject = isObject && isObject.hasOwnProperty('default') ? isObject['default'] : isObject;\n  isNumber = isNumber && isNumber.hasOwnProperty('default') ? isNumber['default'] : isNumber;\n\n  var outputBigNumberFormatter = function outputBigNumberFormatter(number) {\n    return Utils.toBN(number).toString(10);\n  };\n\n  var isPredefinedBlockNumber = function isPredefinedBlockNumber(blockNumber) {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n  };\n\n  var inputDefaultBlockNumberFormatter = function inputDefaultBlockNumberFormatter(blockNumber, moduleInstance) {\n    if (blockNumber === undefined || blockNumber === null) {\n      return moduleInstance.defaultBlock;\n    }\n\n    return inputBlockNumberFormatter(blockNumber);\n  };\n\n  var inputBlockNumberFormatter = function inputBlockNumberFormatter(blockNumber) {\n    if (blockNumber === undefined || blockNumber === null || isPredefinedBlockNumber(blockNumber)) {\n      return blockNumber;\n    }\n\n    if (Utils.isHexStrict(blockNumber)) {\n      if (isString(blockNumber)) {\n        return blockNumber.toLowerCase();\n      }\n\n      return blockNumber;\n    }\n\n    return Utils.numberToHex(blockNumber);\n  };\n\n  var txInputFormatter = function txInputFormatter(txObject) {\n    if (txObject.to) {\n      txObject.to = inputAddressFormatter(txObject.to);\n    }\n\n    if (txObject.data && txObject.input) {\n      throw new Error('You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n    }\n\n    if (!txObject.data && txObject.input) {\n      txObject.data = txObject.input;\n      delete txObject.input;\n    }\n\n    if (txObject.data && !Utils.isHex(txObject.data)) {\n      throw new Error('The data field must be HEX encoded data.');\n    }\n\n    if (txObject.gas || txObject.gasLimit) {\n      txObject.gas = txObject.gas || txObject.gasLimit;\n    }\n\n    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n      return txObject[key] !== undefined;\n    }).forEach(function (key) {\n      txObject[key] = Utils.numberToHex(txObject[key]);\n    });\n    return txObject;\n  };\n\n  var inputCallFormatter = function inputCallFormatter(txObject, moduleInstance) {\n    txObject = txInputFormatter(txObject);\n    var from = moduleInstance.defaultAccount;\n\n    if (txObject.from) {\n      from = txObject.from;\n    }\n\n    if (from) {\n      txObject.from = inputAddressFormatter(from);\n    }\n\n    return txObject;\n  };\n\n  var inputTransactionFormatter = function inputTransactionFormatter(txObject, moduleInstance) {\n    txObject = txInputFormatter(txObject);\n\n    if (!isNumber(txObject.from) && !isObject(txObject.from)) {\n      if (!txObject.from) {\n        txObject.from = moduleInstance.defaultAccount;\n      }\n\n      if (!txObject.from && !isNumber(txObject.from)) {\n        throw new Error('The send transactions \"from\" field must be defined!');\n      }\n\n      txObject.from = inputAddressFormatter(txObject.from);\n    }\n\n    return txObject;\n  };\n\n  var inputSignFormatter = function inputSignFormatter(data) {\n    return Utils.isHexStrict(data) ? data : Utils.utf8ToHex(data);\n  };\n\n  var outputTransactionFormatter = function outputTransactionFormatter(receipt) {\n    if (receipt.blockNumber !== null) {\n      receipt.blockNumber = Utils.hexToNumber(receipt.blockNumber);\n    }\n\n    if (receipt.transactionIndex !== null) {\n      receipt.transactionIndex = Utils.hexToNumber(receipt.transactionIndex);\n    }\n\n    if (receipt.gasPrice) {\n      receipt.gasPrice = outputBigNumberFormatter(receipt.gasPrice);\n    }\n\n    if (receipt.value) {\n      receipt.value = outputBigNumberFormatter(receipt.value);\n    }\n\n    receipt.nonce = Utils.hexToNumber(receipt.nonce);\n    receipt.gas = Utils.hexToNumber(receipt.gas);\n\n    if (receipt.to && Utils.isAddress(receipt.to)) {\n      receipt.to = Utils.toChecksumAddress(receipt.to);\n    } else {\n      receipt.to = null;\n    }\n\n    if (receipt.from) {\n      receipt.from = Utils.toChecksumAddress(receipt.from);\n    }\n\n    return receipt;\n  };\n\n  var outputTransactionReceiptFormatter = function outputTransactionReceiptFormatter(receipt) {\n    if (receipt.blockNumber !== null) {\n      receipt.blockNumber = Utils.hexToNumber(receipt.blockNumber);\n    }\n\n    if (receipt.transactionIndex !== null) {\n      receipt.transactionIndex = Utils.hexToNumber(receipt.transactionIndex);\n    }\n\n    receipt.cumulativeGasUsed = Utils.hexToNumber(receipt.cumulativeGasUsed);\n    receipt.gasUsed = Utils.hexToNumber(receipt.gasUsed);\n\n    if (isArray(receipt.logs)) {\n      receipt.logs = receipt.logs.map(outputLogFormatter);\n    }\n\n    if (receipt.contractAddress) {\n      receipt.contractAddress = Utils.toChecksumAddress(receipt.contractAddress);\n    }\n\n    if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n      receipt.status = Boolean(parseInt(receipt.status));\n    } else {\n      receipt.status = true;\n    }\n\n    return receipt;\n  };\n\n  var outputBlockFormatter = function outputBlockFormatter(block) {\n    block.gasLimit = Utils.hexToNumber(block.gasLimit);\n    block.gasUsed = Utils.hexToNumber(block.gasUsed);\n    block.size = Utils.hexToNumber(block.size);\n    var timestamp = Utils.toBN(block.timestamp);\n\n    if (timestamp.bitLength() <= 53) {\n      block.timestamp = timestamp.toNumber();\n    } else {\n      block.timestamp = timestamp.toString(10);\n    }\n\n    if (block.number !== null) {\n      block.number = Utils.hexToNumber(block.number);\n    }\n\n    if (block.difficulty) {\n      block.difficulty = outputBigNumberFormatter(block.difficulty);\n    }\n\n    if (block.totalDifficulty) {\n      block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n    }\n\n    if (isArray(block.transactions)) {\n      block.transactions.forEach(function (item) {\n        if (!isString(item)) return outputTransactionFormatter(item);\n      });\n    }\n\n    if (block.miner) {\n      block.miner = Utils.toChecksumAddress(block.miner);\n    }\n\n    return block;\n  };\n\n  var inputLogFormatter = function inputLogFormatter(options) {\n    var toTopic = function toTopic(value) {\n      if (value === null || typeof value === 'undefined') {\n        return null;\n      }\n\n      value = String(value);\n\n      if (value.indexOf('0x') === 0) {\n        return value;\n      }\n\n      return Utils.fromUtf8(value);\n    };\n\n    if (options.fromBlock) {\n      options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n    }\n\n    if (options.toBlock) {\n      options.toBlock = inputBlockNumberFormatter(options.toBlock);\n    }\n\n    options.topics = options.topics || [];\n    options.topics = options.topics.map(function (topic) {\n      return isArray(topic) ? topic.map(toTopic) : toTopic(topic);\n    });\n    toTopic = null;\n\n    if (options.address) {\n      if (isArray(options.address)) {\n        options.address = options.address.map(function (addr) {\n          return inputAddressFormatter(addr);\n        });\n      } else {\n        options.address = inputAddressFormatter(options.address);\n      }\n    }\n\n    return options;\n  };\n\n  var outputLogFormatter = function outputLogFormatter(log) {\n    if (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string' && typeof log.logIndex === 'string') {\n      var shaId = Utils.keccak256(log.blockHash.replace('0x', '') + log.transactionHash.replace('0x', '') + log.logIndex.replace('0x', ''));\n      shaId.replace('0x', '').substr(0, 8);\n      log.id = \"log_\".concat(shaId);\n    } else if (!log.id) {\n      log.id = null;\n    }\n\n    if (log.blockNumber !== null) {\n      log.blockNumber = Utils.hexToNumber(log.blockNumber);\n    }\n\n    if (log.transactionIndex !== null) {\n      log.transactionIndex = Utils.hexToNumber(log.transactionIndex);\n    }\n\n    if (log.logIndex !== null) {\n      log.logIndex = Utils.hexToNumber(log.logIndex);\n    }\n\n    if (log.address) {\n      log.address = Utils.toChecksumAddress(log.address);\n    }\n\n    return log;\n  };\n\n  var inputPostFormatter = function inputPostFormatter(post) {\n    if (post.ttl) {\n      post.ttl = Utils.numberToHex(post.ttl);\n    }\n\n    if (post.workToProve) {\n      post.workToProve = Utils.numberToHex(post.workToProve);\n    }\n\n    if (post.priority) {\n      post.priority = Utils.numberToHex(post.priority);\n    }\n\n    if (!isArray(post.topics)) {\n      post.topics = post.topics ? [post.topics] : [];\n    }\n\n    post.topics = post.topics.map(function (topic) {\n      return topic.indexOf('0x') === 0 ? topic : Utils.fromUtf8(topic);\n    });\n    return post;\n  };\n\n  var outputPostFormatter = function outputPostFormatter(post) {\n    post.expiry = Utils.hexToNumber(post.expiry);\n    post.sent = Utils.hexToNumber(post.sent);\n    post.ttl = Utils.hexToNumber(post.ttl);\n    post.workProved = Utils.hexToNumber(post.workProved);\n\n    if (!post.topics) {\n      post.topics = [];\n    }\n\n    post.topics = post.topics.map(function (topic) {\n      return Utils.toUtf8(topic);\n    });\n    return post;\n  };\n\n  var inputAddressFormatter = function inputAddressFormatter(address) {\n    var iban = new web3EthIban.Iban(address);\n\n    if (iban.isValid() && iban.isDirect()) {\n      return iban.toAddress().toLowerCase();\n    }\n\n    if (Utils.isAddress(address)) {\n      return \"0x\".concat(address.toLowerCase().replace('0x', ''));\n    }\n\n    throw new Error(\"Provided address \\\"\".concat(address, \"\\\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can't be converted.\"));\n  };\n\n  var outputSyncingFormatter = function outputSyncingFormatter(result) {\n    result.startingBlock = Utils.hexToNumber(result.startingBlock);\n    result.currentBlock = Utils.hexToNumber(result.currentBlock);\n    result.highestBlock = Utils.hexToNumber(result.highestBlock);\n\n    if (result.knownStates) {\n      result.knownStates = Utils.hexToNumber(result.knownStates);\n      result.pulledStates = Utils.hexToNumber(result.pulledStates);\n    }\n\n    return result;\n  };\n\n  var Formatters = /*#__PURE__*/Object.freeze({\n    outputBigNumberFormatter: outputBigNumberFormatter,\n    isPredefinedBlockNumber: isPredefinedBlockNumber,\n    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n    inputBlockNumberFormatter: inputBlockNumberFormatter,\n    txInputFormatter: txInputFormatter,\n    inputCallFormatter: inputCallFormatter,\n    inputTransactionFormatter: inputTransactionFormatter,\n    inputSignFormatter: inputSignFormatter,\n    outputTransactionFormatter: outputTransactionFormatter,\n    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n    outputBlockFormatter: outputBlockFormatter,\n    inputLogFormatter: inputLogFormatter,\n    outputLogFormatter: outputLogFormatter,\n    inputPostFormatter: inputPostFormatter,\n    outputPostFormatter: outputPostFormatter,\n    inputAddressFormatter: inputAddressFormatter,\n    outputSyncingFormatter: outputSyncingFormatter\n  });\n  exports.formatters = Formatters;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/home/luc1d/Code/Github/waviii.io/node_modules/web3-core-helpers/dist/web3-core-helpers.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","Web3CoreHelpers","isString","isArray","isObject","isNumber","Utils","web3EthIban","hasOwnProperty","outputBigNumberFormatter","number","toBN","toString","isPredefinedBlockNumber","blockNumber","inputDefaultBlockNumberFormatter","moduleInstance","undefined","defaultBlock","inputBlockNumberFormatter","isHexStrict","toLowerCase","numberToHex","txInputFormatter","txObject","to","inputAddressFormatter","data","input","Error","isHex","gas","gasLimit","filter","key","forEach","inputCallFormatter","from","defaultAccount","inputTransactionFormatter","inputSignFormatter","utf8ToHex","outputTransactionFormatter","receipt","hexToNumber","transactionIndex","gasPrice","value","nonce","isAddress","toChecksumAddress","outputTransactionReceiptFormatter","cumulativeGasUsed","gasUsed","logs","map","outputLogFormatter","contractAddress","status","Boolean","parseInt","outputBlockFormatter","block","size","timestamp","bitLength","toNumber","difficulty","totalDifficulty","transactions","item","miner","inputLogFormatter","options","toTopic","String","indexOf","fromUtf8","fromBlock","toBlock","topics","topic","address","addr","log","blockHash","transactionHash","logIndex","shaId","keccak256","replace","substr","id","concat","inputPostFormatter","post","ttl","workToProve","priority","outputPostFormatter","expiry","sent","workProved","toUtf8","iban","Iban","isValid","isDirect","toAddress","outputSyncingFormatter","result","startingBlock","currentBlock","highestBlock","knownStates","pulledStates","Formatters","Object","freeze","formatters","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lodash/isString'), require('lodash/isArray'), require('lodash/isObject'), require('lodash/isNumber'), require('web3-utils'), require('web3-eth-iban')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'lodash/isString', 'lodash/isArray', 'lodash/isObject', 'lodash/isNumber', 'web3-utils', 'web3-eth-iban'], factory) :\n    (global = global || self, factory(global.Web3CoreHelpers = {}, global.isString, global.isArray, global.isObject, global.isNumber, global.Utils, global.web3EthIban));\n}(this, function (exports, isString, isArray, isObject, isNumber, Utils, web3EthIban) { 'use strict';\n\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    isArray = isArray && isArray.hasOwnProperty('default') ? isArray['default'] : isArray;\n    isObject = isObject && isObject.hasOwnProperty('default') ? isObject['default'] : isObject;\n    isNumber = isNumber && isNumber.hasOwnProperty('default') ? isNumber['default'] : isNumber;\n\n    var outputBigNumberFormatter = function outputBigNumberFormatter(number) {\n      return Utils.toBN(number).toString(10);\n    };\n    var isPredefinedBlockNumber = function isPredefinedBlockNumber(blockNumber) {\n      return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n    };\n    var inputDefaultBlockNumberFormatter = function inputDefaultBlockNumberFormatter(blockNumber, moduleInstance) {\n      if (blockNumber === undefined || blockNumber === null) {\n        return moduleInstance.defaultBlock;\n      }\n      return inputBlockNumberFormatter(blockNumber);\n    };\n    var inputBlockNumberFormatter = function inputBlockNumberFormatter(blockNumber) {\n      if (blockNumber === undefined || blockNumber === null || isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n      }\n      if (Utils.isHexStrict(blockNumber)) {\n        if (isString(blockNumber)) {\n          return blockNumber.toLowerCase();\n        }\n        return blockNumber;\n      }\n      return Utils.numberToHex(blockNumber);\n    };\n    var txInputFormatter = function txInputFormatter(txObject) {\n      if (txObject.to) {\n        txObject.to = inputAddressFormatter(txObject.to);\n      }\n      if (txObject.data && txObject.input) {\n        throw new Error('You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n      }\n      if (!txObject.data && txObject.input) {\n        txObject.data = txObject.input;\n        delete txObject.input;\n      }\n      if (txObject.data && !Utils.isHex(txObject.data)) {\n        throw new Error('The data field must be HEX encoded data.');\n      }\n      if (txObject.gas || txObject.gasLimit) {\n        txObject.gas = txObject.gas || txObject.gasLimit;\n      }\n      ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n        return txObject[key] !== undefined;\n      }).forEach(function (key) {\n        txObject[key] = Utils.numberToHex(txObject[key]);\n      });\n      return txObject;\n    };\n    var inputCallFormatter = function inputCallFormatter(txObject, moduleInstance) {\n      txObject = txInputFormatter(txObject);\n      var from = moduleInstance.defaultAccount;\n      if (txObject.from) {\n        from = txObject.from;\n      }\n      if (from) {\n        txObject.from = inputAddressFormatter(from);\n      }\n      return txObject;\n    };\n    var inputTransactionFormatter = function inputTransactionFormatter(txObject, moduleInstance) {\n      txObject = txInputFormatter(txObject);\n      if (!isNumber(txObject.from) && !isObject(txObject.from)) {\n        if (!txObject.from) {\n          txObject.from = moduleInstance.defaultAccount;\n        }\n        if (!txObject.from && !isNumber(txObject.from)) {\n          throw new Error('The send transactions \"from\" field must be defined!');\n        }\n        txObject.from = inputAddressFormatter(txObject.from);\n      }\n      return txObject;\n    };\n    var inputSignFormatter = function inputSignFormatter(data) {\n      return Utils.isHexStrict(data) ? data : Utils.utf8ToHex(data);\n    };\n    var outputTransactionFormatter = function outputTransactionFormatter(receipt) {\n      if (receipt.blockNumber !== null) {\n        receipt.blockNumber = Utils.hexToNumber(receipt.blockNumber);\n      }\n      if (receipt.transactionIndex !== null) {\n        receipt.transactionIndex = Utils.hexToNumber(receipt.transactionIndex);\n      }\n      if (receipt.gasPrice) {\n        receipt.gasPrice = outputBigNumberFormatter(receipt.gasPrice);\n      }\n      if (receipt.value) {\n        receipt.value = outputBigNumberFormatter(receipt.value);\n      }\n      receipt.nonce = Utils.hexToNumber(receipt.nonce);\n      receipt.gas = Utils.hexToNumber(receipt.gas);\n      if (receipt.to && Utils.isAddress(receipt.to)) {\n        receipt.to = Utils.toChecksumAddress(receipt.to);\n      } else {\n        receipt.to = null;\n      }\n      if (receipt.from) {\n        receipt.from = Utils.toChecksumAddress(receipt.from);\n      }\n      return receipt;\n    };\n    var outputTransactionReceiptFormatter = function outputTransactionReceiptFormatter(receipt) {\n      if (receipt.blockNumber !== null) {\n        receipt.blockNumber = Utils.hexToNumber(receipt.blockNumber);\n      }\n      if (receipt.transactionIndex !== null) {\n        receipt.transactionIndex = Utils.hexToNumber(receipt.transactionIndex);\n      }\n      receipt.cumulativeGasUsed = Utils.hexToNumber(receipt.cumulativeGasUsed);\n      receipt.gasUsed = Utils.hexToNumber(receipt.gasUsed);\n      if (isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(outputLogFormatter);\n      }\n      if (receipt.contractAddress) {\n        receipt.contractAddress = Utils.toChecksumAddress(receipt.contractAddress);\n      }\n      if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n        receipt.status = Boolean(parseInt(receipt.status));\n      } else {\n        receipt.status = true;\n      }\n      return receipt;\n    };\n    var outputBlockFormatter = function outputBlockFormatter(block) {\n      block.gasLimit = Utils.hexToNumber(block.gasLimit);\n      block.gasUsed = Utils.hexToNumber(block.gasUsed);\n      block.size = Utils.hexToNumber(block.size);\n      var timestamp = Utils.toBN(block.timestamp);\n      if (timestamp.bitLength() <= 53) {\n        block.timestamp = timestamp.toNumber();\n      } else {\n        block.timestamp = timestamp.toString(10);\n      }\n      if (block.number !== null) {\n        block.number = Utils.hexToNumber(block.number);\n      }\n      if (block.difficulty) {\n        block.difficulty = outputBigNumberFormatter(block.difficulty);\n      }\n      if (block.totalDifficulty) {\n        block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n      }\n      if (isArray(block.transactions)) {\n        block.transactions.forEach(function (item) {\n          if (!isString(item)) return outputTransactionFormatter(item);\n        });\n      }\n      if (block.miner) {\n        block.miner = Utils.toChecksumAddress(block.miner);\n      }\n      return block;\n    };\n    var inputLogFormatter = function inputLogFormatter(options) {\n      var toTopic = function toTopic(value) {\n        if (value === null || typeof value === 'undefined') {\n          return null;\n        }\n        value = String(value);\n        if (value.indexOf('0x') === 0) {\n          return value;\n        }\n        return Utils.fromUtf8(value);\n      };\n      if (options.fromBlock) {\n        options.fromBlock = inputBlockNumberFormatter(options.fromBlock);\n      }\n      if (options.toBlock) {\n        options.toBlock = inputBlockNumberFormatter(options.toBlock);\n      }\n      options.topics = options.topics || [];\n      options.topics = options.topics.map(function (topic) {\n        return isArray(topic) ? topic.map(toTopic) : toTopic(topic);\n      });\n      toTopic = null;\n      if (options.address) {\n        if (isArray(options.address)) {\n          options.address = options.address.map(function (addr) {\n            return inputAddressFormatter(addr);\n          });\n        } else {\n          options.address = inputAddressFormatter(options.address);\n        }\n      }\n      return options;\n    };\n    var outputLogFormatter = function outputLogFormatter(log) {\n      if (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string' && typeof log.logIndex === 'string') {\n        var shaId = Utils.keccak256(log.blockHash.replace('0x', '') + log.transactionHash.replace('0x', '') + log.logIndex.replace('0x', ''));\n        shaId.replace('0x', '').substr(0, 8);\n        log.id = \"log_\".concat(shaId);\n      } else if (!log.id) {\n        log.id = null;\n      }\n      if (log.blockNumber !== null) {\n        log.blockNumber = Utils.hexToNumber(log.blockNumber);\n      }\n      if (log.transactionIndex !== null) {\n        log.transactionIndex = Utils.hexToNumber(log.transactionIndex);\n      }\n      if (log.logIndex !== null) {\n        log.logIndex = Utils.hexToNumber(log.logIndex);\n      }\n      if (log.address) {\n        log.address = Utils.toChecksumAddress(log.address);\n      }\n      return log;\n    };\n    var inputPostFormatter = function inputPostFormatter(post) {\n      if (post.ttl) {\n        post.ttl = Utils.numberToHex(post.ttl);\n      }\n      if (post.workToProve) {\n        post.workToProve = Utils.numberToHex(post.workToProve);\n      }\n      if (post.priority) {\n        post.priority = Utils.numberToHex(post.priority);\n      }\n      if (!isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n      }\n      post.topics = post.topics.map(function (topic) {\n        return topic.indexOf('0x') === 0 ? topic : Utils.fromUtf8(topic);\n      });\n      return post;\n    };\n    var outputPostFormatter = function outputPostFormatter(post) {\n      post.expiry = Utils.hexToNumber(post.expiry);\n      post.sent = Utils.hexToNumber(post.sent);\n      post.ttl = Utils.hexToNumber(post.ttl);\n      post.workProved = Utils.hexToNumber(post.workProved);\n      if (!post.topics) {\n        post.topics = [];\n      }\n      post.topics = post.topics.map(function (topic) {\n        return Utils.toUtf8(topic);\n      });\n      return post;\n    };\n    var inputAddressFormatter = function inputAddressFormatter(address) {\n      var iban = new web3EthIban.Iban(address);\n      if (iban.isValid() && iban.isDirect()) {\n        return iban.toAddress().toLowerCase();\n      }\n      if (Utils.isAddress(address)) {\n        return \"0x\".concat(address.toLowerCase().replace('0x', ''));\n      }\n      throw new Error(\"Provided address \\\"\".concat(address, \"\\\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can't be converted.\"));\n    };\n    var outputSyncingFormatter = function outputSyncingFormatter(result) {\n      result.startingBlock = Utils.hexToNumber(result.startingBlock);\n      result.currentBlock = Utils.hexToNumber(result.currentBlock);\n      result.highestBlock = Utils.hexToNumber(result.highestBlock);\n      if (result.knownStates) {\n        result.knownStates = Utils.hexToNumber(result.knownStates);\n        result.pulledStates = Utils.hexToNumber(result.pulledStates);\n      }\n      return result;\n    };\n\n    var Formatters = /*#__PURE__*/Object.freeze({\n        outputBigNumberFormatter: outputBigNumberFormatter,\n        isPredefinedBlockNumber: isPredefinedBlockNumber,\n        inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n        inputBlockNumberFormatter: inputBlockNumberFormatter,\n        txInputFormatter: txInputFormatter,\n        inputCallFormatter: inputCallFormatter,\n        inputTransactionFormatter: inputTransactionFormatter,\n        inputSignFormatter: inputSignFormatter,\n        outputTransactionFormatter: outputTransactionFormatter,\n        outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n        outputBlockFormatter: outputBlockFormatter,\n        inputLogFormatter: inputLogFormatter,\n        outputLogFormatter: outputLogFormatter,\n        inputPostFormatter: inputPostFormatter,\n        outputPostFormatter: outputPostFormatter,\n        inputAddressFormatter: inputAddressFormatter,\n        outputSyncingFormatter: outputSyncingFormatter\n    });\n\n    exports.formatters = Formatters;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"script"}