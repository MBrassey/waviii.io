{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar bytes_1 = require(\"./bytes\");\n\nvar properties_1 = require(\"./properties\");\n\nvar errors = __importStar(require(\"../errors\"));\n\nvar BN_1 = new bn_js_1.default.BN(-1);\n\nfunction toHex(bn) {\n  var value = bn.toString(16);\n\n  if (value[0] === '-') {\n    if (value.length % 2 === 0) {\n      return '-0x0' + value.substring(1);\n    }\n\n    return \"-0x\" + value.substring(1);\n  }\n\n  if (value.length % 2 === 1) {\n    return '0x0' + value;\n  }\n\n  return '0x' + value;\n}\n\nfunction toBN(value) {\n  return _bnify(bigNumberify(value));\n}\n\nfunction toBigNumber(bn) {\n  return new BigNumber(toHex(bn));\n}\n\nfunction _bnify(value) {\n  var hex = value._hex;\n\n  if (hex[0] === '-') {\n    return new bn_js_1.default.BN(hex.substring(3), 16).mul(BN_1);\n  }\n\n  return new bn_js_1.default.BN(hex.substring(2), 16);\n}\n\nvar BigNumber =\n/** @class */\nfunction () {\n  function BigNumber(value) {\n    errors.checkNew(this, BigNumber);\n    properties_1.setType(this, 'BigNumber');\n\n    if (typeof value === 'string') {\n      if (bytes_1.isHexString(value)) {\n        if (value == '0x') {\n          value = '0x0';\n        }\n\n        properties_1.defineReadOnly(this, '_hex', value);\n      } else if (value[0] === '-' && bytes_1.isHexString(value.substring(1))) {\n        properties_1.defineReadOnly(this, '_hex', value);\n      } else if (value.match(/^-?[0-9]*$/)) {\n        if (value == '') {\n          value = '0';\n        }\n\n        properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n      } else {\n        errors.throwError('invalid BigNumber string value', errors.INVALID_ARGUMENT, {\n          arg: 'value',\n          value: value\n        });\n      }\n    } else if (typeof value === 'number') {\n      if (parseInt(String(value)) !== value) {\n        errors.throwError('underflow', errors.NUMERIC_FAULT, {\n          operation: 'setValue',\n          fault: 'underflow',\n          value: value,\n          outputValue: parseInt(String(value))\n        });\n      }\n\n      try {\n        properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n      } catch (error) {\n        errors.throwError('overflow', errors.NUMERIC_FAULT, {\n          operation: 'setValue',\n          fault: 'overflow',\n          details: error.message\n        });\n      }\n    } else if (value instanceof BigNumber) {\n      properties_1.defineReadOnly(this, '_hex', value._hex);\n    } else if (value.toHexString) {\n      properties_1.defineReadOnly(this, '_hex', toHex(toBN(value.toHexString())));\n    } else if (value._hex && bytes_1.isHexString(value._hex)) {\n      properties_1.defineReadOnly(this, '_hex', value._hex);\n    } else if (bytes_1.isArrayish(value)) {\n      properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(bytes_1.hexlify(value).substring(2), 16)));\n    } else {\n      errors.throwError('invalid BigNumber value', errors.INVALID_ARGUMENT, {\n        arg: 'value',\n        value: value\n      });\n    }\n  }\n\n  BigNumber.prototype.fromTwos = function (value) {\n    return toBigNumber(_bnify(this).fromTwos(value));\n  };\n\n  BigNumber.prototype.toTwos = function (value) {\n    return toBigNumber(_bnify(this).toTwos(value));\n  };\n\n  BigNumber.prototype.abs = function () {\n    if (this._hex[0] === '-') {\n      return toBigNumber(_bnify(this).mul(BN_1));\n    }\n\n    return this;\n  };\n\n  BigNumber.prototype.add = function (other) {\n    return toBigNumber(_bnify(this).add(toBN(other)));\n  };\n\n  BigNumber.prototype.sub = function (other) {\n    return toBigNumber(_bnify(this).sub(toBN(other)));\n  };\n\n  BigNumber.prototype.div = function (other) {\n    var o = bigNumberify(other);\n\n    if (o.isZero()) {\n      errors.throwError('division by zero', errors.NUMERIC_FAULT, {\n        operation: 'divide',\n        fault: 'division by zero'\n      });\n    }\n\n    return toBigNumber(_bnify(this).div(toBN(other)));\n  };\n\n  BigNumber.prototype.mul = function (other) {\n    return toBigNumber(_bnify(this).mul(toBN(other)));\n  };\n\n  BigNumber.prototype.mod = function (other) {\n    return toBigNumber(_bnify(this).mod(toBN(other)));\n  };\n\n  BigNumber.prototype.pow = function (other) {\n    return toBigNumber(_bnify(this).pow(toBN(other)));\n  };\n\n  BigNumber.prototype.maskn = function (value) {\n    return toBigNumber(_bnify(this).maskn(value));\n  };\n\n  BigNumber.prototype.eq = function (other) {\n    return _bnify(this).eq(toBN(other));\n  };\n\n  BigNumber.prototype.lt = function (other) {\n    return _bnify(this).lt(toBN(other));\n  };\n\n  BigNumber.prototype.lte = function (other) {\n    return _bnify(this).lte(toBN(other));\n  };\n\n  BigNumber.prototype.gt = function (other) {\n    return _bnify(this).gt(toBN(other));\n  };\n\n  BigNumber.prototype.gte = function (other) {\n    return _bnify(this).gte(toBN(other));\n  };\n\n  BigNumber.prototype.isZero = function () {\n    return _bnify(this).isZero();\n  };\n\n  BigNumber.prototype.toNumber = function () {\n    try {\n      return _bnify(this).toNumber();\n    } catch (error) {\n      errors.throwError('overflow', errors.NUMERIC_FAULT, {\n        operation: 'setValue',\n        fault: 'overflow',\n        details: error.message\n      });\n    }\n\n    return null;\n  };\n\n  BigNumber.prototype.toString = function () {\n    return _bnify(this).toString(10);\n  };\n\n  BigNumber.prototype.toHexString = function () {\n    return this._hex;\n  };\n\n  BigNumber.isBigNumber = function (value) {\n    return properties_1.isType(value, 'BigNumber');\n  };\n\n  return BigNumber;\n}();\n\nexports.BigNumber = BigNumber;\n\nfunction bigNumberify(value) {\n  if (BigNumber.isBigNumber(value)) {\n    return value;\n  }\n\n  return new BigNumber(value);\n}\n\nexports.bigNumberify = bigNumberify;","map":{"version":3,"sources":["/home/luc1d/Code/Github/waviii.io/node_modules/ethers/utils/bignumber.js"],"names":["__importDefault","mod","__esModule","__importStar","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","bn_js_1","require","bytes_1","properties_1","errors","BN_1","default","BN","toHex","bn","toString","length","substring","toBN","_bnify","bigNumberify","toBigNumber","BigNumber","hex","_hex","mul","checkNew","setType","isHexString","defineReadOnly","match","throwError","INVALID_ARGUMENT","arg","parseInt","String","NUMERIC_FAULT","operation","fault","outputValue","error","details","message","toHexString","isArrayish","hexlify","prototype","fromTwos","toTwos","abs","add","other","sub","div","o","isZero","pow","maskn","eq","lt","lte","gt","gte","toNumber","isBigNumber","isType"],"mappings":"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","sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar properties_1 = require(\"./properties\");\nvar errors = __importStar(require(\"../errors\"));\nvar BN_1 = new bn_js_1.default.BN(-1);\nfunction toHex(bn) {\n    var value = bn.toString(16);\n    if (value[0] === '-') {\n        if ((value.length % 2) === 0) {\n            return '-0x0' + value.substring(1);\n        }\n        return \"-0x\" + value.substring(1);\n    }\n    if ((value.length % 2) === 1) {\n        return '0x0' + value;\n    }\n    return '0x' + value;\n}\nfunction toBN(value) {\n    return _bnify(bigNumberify(value));\n}\nfunction toBigNumber(bn) {\n    return new BigNumber(toHex(bn));\n}\nfunction _bnify(value) {\n    var hex = value._hex;\n    if (hex[0] === '-') {\n        return (new bn_js_1.default.BN(hex.substring(3), 16)).mul(BN_1);\n    }\n    return new bn_js_1.default.BN(hex.substring(2), 16);\n}\nvar BigNumber = /** @class */ (function () {\n    function BigNumber(value) {\n        errors.checkNew(this, BigNumber);\n        properties_1.setType(this, 'BigNumber');\n        if (typeof (value) === 'string') {\n            if (bytes_1.isHexString(value)) {\n                if (value == '0x') {\n                    value = '0x0';\n                }\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value[0] === '-' && bytes_1.isHexString(value.substring(1))) {\n                properties_1.defineReadOnly(this, '_hex', value);\n            }\n            else if (value.match(/^-?[0-9]*$/)) {\n                if (value == '') {\n                    value = '0';\n                }\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            else {\n                errors.throwError('invalid BigNumber string value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n            }\n        }\n        else if (typeof (value) === 'number') {\n            if (parseInt(String(value)) !== value) {\n                errors.throwError('underflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'underflow', value: value, outputValue: parseInt(String(value)) });\n            }\n            try {\n                properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(value)));\n            }\n            catch (error) {\n                errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n            }\n        }\n        else if (value instanceof BigNumber) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (value.toHexString) {\n            properties_1.defineReadOnly(this, '_hex', toHex(toBN(value.toHexString())));\n        }\n        else if (value._hex && bytes_1.isHexString(value._hex)) {\n            properties_1.defineReadOnly(this, '_hex', value._hex);\n        }\n        else if (bytes_1.isArrayish(value)) {\n            properties_1.defineReadOnly(this, '_hex', toHex(new bn_js_1.default.BN(bytes_1.hexlify(value).substring(2), 16)));\n        }\n        else {\n            errors.throwError('invalid BigNumber value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n        }\n    }\n    BigNumber.prototype.fromTwos = function (value) {\n        return toBigNumber(_bnify(this).fromTwos(value));\n    };\n    BigNumber.prototype.toTwos = function (value) {\n        return toBigNumber(_bnify(this).toTwos(value));\n    };\n    BigNumber.prototype.abs = function () {\n        if (this._hex[0] === '-') {\n            return toBigNumber(_bnify(this).mul(BN_1));\n        }\n        return this;\n    };\n    BigNumber.prototype.add = function (other) {\n        return toBigNumber(_bnify(this).add(toBN(other)));\n    };\n    BigNumber.prototype.sub = function (other) {\n        return toBigNumber(_bnify(this).sub(toBN(other)));\n    };\n    BigNumber.prototype.div = function (other) {\n        var o = bigNumberify(other);\n        if (o.isZero()) {\n            errors.throwError('division by zero', errors.NUMERIC_FAULT, { operation: 'divide', fault: 'division by zero' });\n        }\n        return toBigNumber(_bnify(this).div(toBN(other)));\n    };\n    BigNumber.prototype.mul = function (other) {\n        return toBigNumber(_bnify(this).mul(toBN(other)));\n    };\n    BigNumber.prototype.mod = function (other) {\n        return toBigNumber(_bnify(this).mod(toBN(other)));\n    };\n    BigNumber.prototype.pow = function (other) {\n        return toBigNumber(_bnify(this).pow(toBN(other)));\n    };\n    BigNumber.prototype.maskn = function (value) {\n        return toBigNumber(_bnify(this).maskn(value));\n    };\n    BigNumber.prototype.eq = function (other) {\n        return _bnify(this).eq(toBN(other));\n    };\n    BigNumber.prototype.lt = function (other) {\n        return _bnify(this).lt(toBN(other));\n    };\n    BigNumber.prototype.lte = function (other) {\n        return _bnify(this).lte(toBN(other));\n    };\n    BigNumber.prototype.gt = function (other) {\n        return _bnify(this).gt(toBN(other));\n    };\n    BigNumber.prototype.gte = function (other) {\n        return _bnify(this).gte(toBN(other));\n    };\n    BigNumber.prototype.isZero = function () {\n        return _bnify(this).isZero();\n    };\n    BigNumber.prototype.toNumber = function () {\n        try {\n            return _bnify(this).toNumber();\n        }\n        catch (error) {\n            errors.throwError('overflow', errors.NUMERIC_FAULT, { operation: 'setValue', fault: 'overflow', details: error.message });\n        }\n        return null;\n    };\n    BigNumber.prototype.toString = function () {\n        return _bnify(this).toString(10);\n    };\n    BigNumber.prototype.toHexString = function () {\n        return this._hex;\n    };\n    BigNumber.isBigNumber = function (value) {\n        return properties_1.isType(value, 'BigNumber');\n    };\n    return BigNumber;\n}());\nexports.BigNumber = BigNumber;\nfunction bigNumberify(value) {\n    if (BigNumber.isBigNumber(value)) {\n        return value;\n    }\n    return new BigNumber(value);\n}\nexports.bigNumberify = bigNumberify;\n"]},"metadata":{},"sourceType":"script"}