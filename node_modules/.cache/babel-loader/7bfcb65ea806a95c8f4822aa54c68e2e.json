{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar Transform = require('stream').Transform;\n\nvar inherits = require('inherits');\n\nmodule.exports = function (KeccakState) {\n  function Shake(rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options);\n    this._rate = rate;\n    this._capacity = capacity;\n    this._delimitedSuffix = delimitedSuffix;\n    this._options = options;\n    this._state = new KeccakState();\n\n    this._state.initialize(rate, capacity);\n\n    this._finalized = false;\n  }\n\n  inherits(Shake, Transform);\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    var error = null;\n\n    try {\n      this.update(chunk, encoding);\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  };\n\n  Shake.prototype._flush = function () {};\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size));\n  };\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n    if (this._finalized) throw new Error('Squeeze already called');\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n    this._state.absorb(data);\n\n    return this;\n  };\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true;\n\n      this._state.absorbLastFewBits(this._delimitedSuffix);\n    }\n\n    var data = this._state.squeeze(dataByteLength);\n\n    if (encoding !== undefined) data = data.toString(encoding);\n    return data;\n  };\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity);\n\n    return this;\n  };\n\n  Shake.prototype._clone = function () {\n    var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);\n\n    this._state.copy(clone._state);\n\n    clone._finalized = this._finalized;\n    return clone;\n  };\n\n  return Shake;\n};","map":{"version":3,"sources":["/home/luc1d/Code/Github/waviii.io/node_modules/keccak/lib/api/shake.js"],"names":["Buffer","require","Transform","inherits","module","exports","KeccakState","Shake","rate","capacity","delimitedSuffix","options","call","_rate","_capacity","_delimitedSuffix","_options","_state","initialize","_finalized","prototype","_transform","chunk","encoding","callback","error","update","err","_flush","_read","size","push","squeeze","data","isBuffer","TypeError","Error","from","absorb","dataByteLength","absorbLastFewBits","undefined","toString","_resetState","_clone","clone","copy"],"mappings":"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","sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    var error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    var data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n"]},"metadata":{},"sourceType":"script"}